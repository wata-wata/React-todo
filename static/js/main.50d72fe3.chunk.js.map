{"version":3,"sources":["logo.svg","ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAAe,I,kCCwCAA,MAlCf,SAAmBC,GACjB,IAEMC,EAFQD,EAAME,MAEIC,KAAI,SAAAC,GAC1B,OAAO,qBAAKC,UAAU,OAAf,SACL,8BAGE,uBAAOC,KAAK,OACVC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SAAa,SAACC,GACZZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAGzC,+BAGE,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QACxCC,QAAS,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAfXJ,EAAKI,QAoBzC,OACE,8BAEE,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACGlB,O,eC3BTmB,IAAQC,IAAIC,K,IA0FGC,E,kDAvFb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAM,CACTtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,KAKR,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAdA,E,+CAkBnB,SAAYf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAKuB,KAAKC,W,qBAMhB,SAAQpB,GACNA,EAAEqB,iBAEF,IAAMC,EAAUL,KAAKL,MAAMC,YAG3B,GAFAU,QAAQC,IAAIF,GAEM,KAAfA,EAAQxB,KAAU,CACnB,IAAM2B,EAAS,GAAD,mBAAKR,KAAKL,MAAMtB,OAAhB,CAAuBgC,IAErCL,KAAKC,SAAS,CACZ5B,MAAMmC,EACNZ,YAAY,CACVf,KAAK,GACLF,IAAI,S,wBAOZ,SAAWA,GACT,IAAM8B,EAAgBT,KAAKL,MAAMtB,MAAMqC,QAAO,SAAAnC,GAAI,OAAIA,EAAKI,MAAMA,KACjEqB,KAAKC,SAAS,CACZ5B,MAAMoC,M,uBAKV,SAAU5B,EAAMF,GACd,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAOA,MAGhBmB,KAAKC,SAAS,CACZ5B,MAAMA,M,oBAIV,WACE,OACE,sBAAKG,UAAU,MAAf,UACE,iCACE,uBAAME,GAAG,aAAaiC,SAAUX,KAAKD,QAArC,UACE,uBAAOtB,KAAK,OAAOmC,YAAY,aAC7BhC,MAAOoB,KAAKL,MAAMC,YAAYf,KAC9BC,SAAUkB,KAAKH,cACjB,wBAAQpB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAWJ,MAAS2B,KAAKL,MAAMtB,MAC7Be,WAAcY,KAAKZ,WACnBJ,UAAagB,KAAKhB,mB,GAlFV6B,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.50d72fe3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './ListItems.css'\n// Githubから読み込む\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport FlipMove from 'react-flip-move';\n\nfunction ListItems(props) {\n  const items = props.items;\n  // リストを1つずつ表示する\n  const listItems = items.map(item => {\n    return <div className=\"list\" key={item.key}>\n      <p>\n        {/* {item.text} */}\n        {/* inputにして、編集できるようにする */}\n        <input type=\"text\" \n          id={item.key} \n          value={item.text}\n          onChange = { (e) => {\n            props.setUpdate(e.target.value, item.key);\n          }}\n        />\n        <span>\n          {/* ゴミ箱のアイコン */}\n          {/* クリックしたら、リストから削除する */}\n          <FontAwesomeIcon className=\"faicons\" icon='trash' \n            onClick={() => props.deleteItem(item.key)} />\n        </span>\n      </p>\n    </div>\n  })\n  return(\n    <div>\n      {/* FlipMove: 追加、削除したときにアニメーションを加える(duration: スピード) */}\n      <FlipMove duration={500} easing=\"ease-in-out\">\n        {listItems}\n      </FlipMove>\n    </div>\n  )\n}\n\nexport default ListItems;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ListItems from './ListItems';\n// Githubから読み込む\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faTrash);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n\n    // 関数を使えるようにする\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  // formの中身が変更されると呼び出される\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  // formが送信される(Addボタンが押される)と呼び出される\n  addItem(e){\n    e.preventDefault(); // ページの再読み込みを防ぐ　\n\n    const newItem = this.state.currentItem; // 入力されたもの\n    console.log(newItem);\n\n    if(newItem.text!==\"\"){ // 文字が入力されているとき\n      const newItems=[...this.state.items, newItem]; // 入力されたものを追加する\n\n      this.setState({\n        items:newItems, // 入力されたものを追加する\n        currentItem:{ // formの中身を空にする\n          text:'',\n          key:''\n        }\n      })\n    }\n  }\n\n  // ゴミ箱のアイコンがクリックされると呼び出され、リストから削除する\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item => item.key!==key);\n    this.setState({\n      items:filteredItems\n    })\n  }\n\n  // リストを編集すると呼び出される\n  setUpdate(text, key){\n    const items = this.state.items;\n    items.map(item =>{\n      if(item.key===key){ // 編集したものとkeyが一致していれば、textを変更する\n        item.text = text;\n      }\n    })\n    this.setState({\n      items:items\n    })\n  }\n\n  render(){\n    return(\n      <div className=\"App\">\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input type=\"text\" placeholder=\"Enter Text\" \n              value={this.state.currentItem.text} \n              onChange={this.handleInput} />\n            <button type=\"submit\">Add</button>\n          </form>\n        </header>\n        <ListItems items = {this.state.items} \n          deleteItem = {this.deleteItem} \n          setUpdate = {this.setUpdate} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}